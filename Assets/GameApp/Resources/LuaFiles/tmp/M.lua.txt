local M ={}

local function tri_area(a,b,c)
   local p=(a+b+c)/2;
   local res=math.sqrt(p*(p-a)*(p-b)*(p-c));
   return res;
end

local function is_tri(a,b,c)
   local b1=(a+b)>c;
   local b2=(a+c)>b;
   local b3=(b+c)>a;
   return b1 and b2 and b3;
end

local function printTable(t)
   print(table.concat(t," "));
end

local function printList(t)
   printTable(t)
end

local function printMatrix(t)
   for i, v in ipairs(t) do
      printTable(v);
   end
end

local function initMatrix(row,col)
   local res={};
   for i=1,row do
      local t ={};
      for j=1,col do
         t[#t+1]=0;
      end
      res[#res+1]=t;
   end
   return res,row,col;
end

local function snakeMatrix(row,col,step)
   step =step or 1;

   local martix =initMatrix(row,col);
   local row_start=1;
   local row_end=row;
   local col_start=1;
   local col_end=col;

   while(step<=row*col) do
      for i=col_start,col_end do
         martix[row_start][i]=step;
         step=step+1;
      end
      row_start=row_start+1;

      for i=row_start,row_end do
         martix[i][col_end]=step;
         step=step+1;
      end
      col_end=col_end-1;

      for i=col_end,col_start,-1 do
         martix[row_end][i]=step;
         step=step+1;
      end
      row_end=row_end-1;

      for i=row_end,row_start,-1 do
         martix[i][col_start]=step;
         step=step+1;
      end
      col_start=col_start+1;
   end

   return martix;
end

local function listSum(t)
   local res =0;
   for i, v in ipairs(t) do
     res =res+v;
   end
   return res;
end

local function randomItem(t)
   local idx =math.random(1,#t);
   return t[idx];
end

--双等差数列通项公式
local function doubleArithmeticSeqItem(first2,d1,n)
   return math.floor( first2+ d1*((n*(n-1))/2));
end

M.printList=printList;
M.doubleArithmeticSeqItem=doubleArithmeticSeqItem;
M.listSum=listSum;
M.randomItem=randomItem;
M.snakeMatrix=snakeMatrix;
M.printMatrix=printMatrix;
M.is_tri=is_tri;
M.tri_area=tri_area;
M.initMatrix=initMatrix;





--[[
local gameMgr=class("gameMgr");

function gameMgr:start()
    print("i gam game1 gameMgr");
    self.k=555;
    gameMgr.k=333;
end

local function test(self)

    local a=3;
    a=a+self.k;
    a=a*5;

    return a;

end;

function gameMgr:update()
    dbg.breakHere()
    test(gameMgr);
    print("ggk");

end

return gameMgr;















local D2=class("D2");

function D2:ctor(v)
    self.x=v;
end

function D2:pp()
    print(self.x);
end

function D2:add()
    self.x=self.x+1;
end

local d21 =D2.new(5);
local d22= D2.new(6);
d22:add(1);
d21:pp();
d22:pp();





---@class gameMgr
local gameMgr=class("gameMgr");

---@param a gameMgr
local function add(a)
    a:ggk()
end

function gameMgr:ctor(a)
   --print("ctor",a);
    ---@UnityEngine.GameObject
    self.cube=UnityEngine.GameObject.Find("Cube");
    local k=add("3","2");

end






---@param a number
---@param b gameMgr
---@return gameMgr
local function add(a,b)

end












---@class gameMgr
local gameMgr=class("gameMgr");

---@param a number
---@param b gameMgr
---@return gameMgr
local function add(a,b)

end

function gameMgr:ctor(a)
   --print("ctor",a);
    ---@UnityEngine.GameObject
    self.cube=UnityEngine.GameObject.Find("Cube");
    print(self.cube);
end

function gameMgr:ggk()

end

function gameMgr:update()
    ---@type UnityEngine.Transform
    local t =self.cube:GetComponent(typeof(UnityEngine.Transform));
    t.localPosition=UnityEngine.Vector3(math.random(1,10),math.random(1,10),0);

    --print(t);
end

return gameMgr;

















--]]






return M;

